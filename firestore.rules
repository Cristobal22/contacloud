rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile information.
     * @path /users/{userId}
     * @allow (create) User with UID 'user123' can create their profile at /users/user123.
     * @allow (get) User with UID 'user123' can read their profile at /users/user123.
     * @allow (update) User with UID 'user123' can update their profile at /users/user123.
     * @allow (delete) User with UID 'user123' can delete their profile at /users/user123.
     * @deny (create) User with UID 'user456' cannot create a profile at /users/user123.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.uid == request.auth.uid;
      allow update: if isSignedIn() && isExistingOwner(userId) && request.resource.data.uid == resource.data.uid;
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    /**
     * @description Controls access to the companies collection.
     * @path /companies
     * @allow (get) N/A - Listing companies is not allowed.
     * @deny (create) Any user cannot create a company.
     * @principle Prevents unauthorized modification of the companies collection.
     */
    match /companies/{companyId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the accounts sub-collection for a specific company.
     * @path /companies/{companyId}/accounts
     * @allow (get) N/A - Requires company membership check (not implemented).
     * @deny (create) Any user cannot create an account.
     * @principle Restricts access to company-specific data.
     */
    match /companies/{companyId}/accounts/{accountId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the vouchers sub-collection for a specific company.
     * @path /companies/{companyId}/vouchers
     * @allow (get) N/A - Requires company membership check (not implemented).
     * @deny (create) Any user cannot create a voucher.
     * @principle Restricts access to company-specific data.
     */
    match /companies/{companyId}/vouchers/{voucherId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the subjects sub-collection for a specific company.
     * @path /companies/{companyId}/subjects
     * @allow (get) N/A - Requires company membership check (not implemented).
     * @deny (create) Any user cannot create a subject.
     * @principle Restricts access to company-specific data.
     */
    match /companies/{companyId}/subjects/{subjectId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the cost-centers sub-collection for a specific company.
     * @path /companies/{companyId}/cost-centers
     * @allow (get) N/A - Requires company membership check (not implemented).
     * @deny (create) Any user cannot create a cost-center.
     * @principle Restricts access to company-specific data.
     */
    match /companies/{companyId}/cost-centers/{costCenterId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the employees sub-collection for a specific company.
     * @path /companies/{companyId}/employees
     * @allow (get) N/A - Requires company membership check (not implemented).
     * @deny (create) Any user cannot create an employee.
     * @principle Restricts access to company-specific data.
     */
    match /companies/{companyId}/employees/{employeeId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the purchases sub-collection for a specific company.
     * @path /companies/{companyId}/purchases
     * @allow (get) N/A - Requires company membership check (not implemented).
     * @deny (create) Any user cannot create an purchase.
     * @principle Restricts access to company-specific data.
     */
     match /companies/{companyId}/purchases/{purchaseId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the sales sub-collection for a specific company.
     * @path /companies/{companyId}/sales
     * @allow (get) N/A - Requires company membership check (not implemented).
     * @deny (create) Any user cannot create an sale.
     * @principle Restricts access to company-specific data.
     */
    match /companies/{companyId}/sales/{saleId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the fees sub-collection for a specific company.
     * @path /companies/{companyId}/fees
     * @allow (get) N/A - Requires company membership check (not implemented).
     * @deny (create) Any user cannot create an fee.
     * @principle Restricts access to company-specific data.
     */
    match /companies/{companyId}/fees/{feeId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the account-groups collection.
     * @path /account-groups
     * @allow (get) Any user can read account groups.
     * @deny (create) No user can create, update, or delete account groups.
     * @principle Allows public read access to global configuration data.
     */
    match /account-groups/{accountGroupId} {
        allow get: if true;
        allow list: if true;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the institutions collection.
     * @path /institutions
     * @allow (get) Any user can read institutions.
     * @deny (create) No user can create, update, or delete institutions.
     * @principle Allows public read access to global configuration data.
     */
    match /institutions/{institutionId} {
        allow get: if true;
        allow list: if true;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the family-allowance-parameters collection.
     * @path /family-allowance-parameters
     * @allow (get) Any user can read family allowance parameters.
     * @deny (create) No user can create, update, or delete family allowance parameters.
     * @principle Allows public read access to global configuration data.
     */
    match /family-allowance-parameters/{familyAllowanceParameterId} {
        allow get: if true;
        allow list: if true;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the tax-parameters collection.
     * @path /tax-parameters
     * @allow (get) Any user can read tax parameters.
     * @deny (create) No user can create, update, or delete tax parameters.
     * @principle Allows public read access to global configuration data.
     */
    match /tax-parameters/{taxParameterId} {
        allow get: if true;
        allow list: if true;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the health-entities collection.
     * @path /health-entities
     * @allow (get) Any user can read health entities.
     * @deny (create) No user can create, update, or delete health entities.
     * @principle Allows public read access to global configuration data.
     */
    match /health-entities/{healthEntityId} {
        allow get: if true;
        allow list: if true;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Controls access to the afp-entities collection.
     * @path /afp-entities
     * @allow (get) Any user can read AFP entities.
     * @deny (create) No user can create, update, or delete AFP entities.
     * @principle Allows public read access to global configuration data.
     */
    match /afp-entities/{afpEntityId} {
        allow get: if true;
        allow list: if true;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }
  }
}