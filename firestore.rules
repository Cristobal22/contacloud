rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }

    function isAdmin() {
      return isSignedIn() && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
    }

    function isUserAssociatedWithCompany(companyId) {
      return isSignedIn() && (companyId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyIds);
    }

    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId) && request.resource.data.uid == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.uid == resource.data.uid;
      allow delete: if isExistingOwner(userId);
    }

    match /companies/{companyId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isSignedIn() && request.resource.data.ownerId == request.auth.uid;
      allow update: if isExistingOwner(resource.data.ownerId);
      allow delete: if isExistingOwner(resource.data.ownerId);
    }
    
    match /workers/{workerId} {
        allow get, list: if isUserAssociatedWithCompany(resource.data.companyId);
        allow create, update, delete: if isUserAssociatedWithCompany(request.resource.data.companyId);
    }

    match /companies/{companyId}/accounts/{accountId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isUserAssociatedWithCompany(companyId);
      allow update: if isUserAssociatedWithCompany(companyId) && resource != null;
      allow delete: if isUserAssociatedWithCompany(companyId) && resource != null;
    }

    match /companies/{companyId}/vouchers/{voucherId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isUserAssociatedWithCompany(companyId);
      allow update: if isUserAssociatedWithCompany(companyId) && resource != null;
      allow delete: if isUserAssociatedWithCompany(companyId) && resource != null;
    }

    match /companies/{companyId}/subjects/{subjectId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isUserAssociatedWithCompany(companyId);
      allow update: if isUserAssociatedWithCompany(companyId) && resource != null;
      allow delete: if isUserAssociatedWithCompany(companyId) && resource != null;
    }

    match /companies/{companyId}/cost-centers/{costCenterId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isUserAssociatedWithCompany(companyId);
      allow update: if isUserAssociatedWithCompany(companyId) && resource != null;
      allow delete: if isUserAssociatedWithCompany(companyId) && resource != null;
    }

    match /companies/{companyId}/employees/{employeeId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isUserAssociatedWithCompany(companyId);
      allow update: if isUserAssociatedWithCompany(companyId) && resource != null;
      allow delete: if isUserAssociatedWithCompany(companyId) && resource != null;
    }

    match /companies/{companyId}/payrolls/{payrollId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isUserAssociatedWithCompany(companyId);
      allow update: if isUserAssociatedWithCompany(companyId) && resource != null;
      allow delete: if isUserAssociatedWithCompany(companyId) && resource != null;
    }

    match /companies/{companyId}/purchases/{purchaseId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isUserAssociatedWithCompany(companyId);
      allow update: if isUserAssociatedWithCompany(companyId) && resource != null;
      allow delete: if isUserAssociatedWithCompany(companyId) && resource != null;
    }

    match /companies/{companyId}/sales/{saleId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isUserAssociatedWithCompany(companyId);
      allow update: if isUserAssociatedWithCompany(companyId) && resource != null;
      allow delete: if isUserAssociatedWithCompany(companyId) && resource != null;
    }

    match /companies/{companyId}/fees/{feeId} {
      allow get, list: if isUserAssociatedWithCompany(companyId);
      allow create: if isUserAssociatedWithCompany(companyId);
      allow update: if isUserAssociatedWithCompany(companyId) && resource != null;
      allow delete: if isUserAssociatedWithCompany(companyId) && resource != null;
    }

    match /companies/{companyId}/economic-indicators/{indicatorId} {
        allow get, list: if isUserAssociatedWithCompany(companyId);
        allow create: if isAdmin();
        allow update: if isAdmin() && resource != null;
        allow delete: if isAdmin() && resource != null;
    }

    match /users/{userId}/account-groups/{accountGroupId} {
      allow get, list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    match /economic-indicators/{indicatorId} {
      allow get, list: if true;
      allow create: if isAdmin();
      allow update: if isAdmin() && resource != null;
      allow delete: if isAdmin() && resource != null;
    }

    match /health-entities/{entityId} {
      allow get, list: if true;
      allow create: if isAdmin();
      allow update: if isAdmin() && resource != null;
      allow delete: if isAdmin() && resource != null;
    }

    match /afp-entities/{entityId} {
      allow get, list: if true;
      allow create: if isAdmin();
      allow update: if isAdmin() && resource != null;
      allow delete: if isAdmin() && resource != null;
    }

    match /family-allowance-parameters/{paramId} {
      allow get, list: if true;
      allow create: if isAdmin();
      allow update: if isAdmin() && resource != null;
      allow delete: if isAdmin() && resource != null;
    }

    match /tax-parameters/{paramId} {
      allow get, list: if true;
      allow create: if isAdmin();
      allow update: if isAdmin() && resource != null;
      allow delete: if isAdmin() && resource != null;
    }

    match /taxable-caps/{capId} {
      allow get, list: if true;
      allow create: if isAdmin();
      allow update: if isAdmin() && resource != null;
      allow delete: if isAdmin() && resource != null;
    }
  }
}